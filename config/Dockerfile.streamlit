# 1. Use a "builder" stage to install dependencies
FROM python:3.12-slim AS builder

# Copy the uv binary from the official distroless image
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

WORKDIR /app

# Create a virtual environment
RUN uv venv

# Copy dependency definitions
COPY pyproject.toml uv.lock ./

# Install dependencies into the virtual environment, excluding the project itself.
RUN . .venv/bin/activate && uv sync --locked --no-install-project

# Copy the application source code
COPY src/ ./src/

# Install the project itself into the venv.
# Since dependencies are already installed, this step is very fast.
RUN . .venv/bin/activate && uv pip install .

# 2. Use a clean "final" stage for the runtime environment
FROM python:3.12-slim

WORKDIR /app

# Copy the virtual environment with all dependencies from the builder stage
COPY --from=builder /app/.venv ./.venv

# Activate the virtual environment by adding it to the PATH
ENV PATH="/app/.venv/bin:$PATH"

EXPOSE 8501

CMD ["streamlit", "run", "src/streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]